diff --git a/src/lib/simple_serial.c b/src/lib/simple_serial.c
index e448b91..7c1c095 100644
--- a/src/lib/simple_serial.c
+++ b/src/lib/simple_serial.c
@@ -278,6 +278,31 @@ void simple_serial_flush(void) {
   }
   while(simple_serial_getc_with_timeout() != EOF);
 }
+
+unsigned char ser_flow(unsigned char on) {
+  int fd = fileno(ttyfp);
+  int status;
+  if (ioctl(fd, TIOCMGET, &status) == -1) {
+    printf("ser_flow: TIOCMGET error");
+    return -1;
+  }
+
+  printf("Serial flow was: DTR %d RTS %d\n", status & TIOCM_DTR, status & TIOCM_RTS);
+
+  return 0;
+
+  if (on) 
+    status |= (TIOCM_DTR|TIOCM_RTS);
+  else 
+    status &= ~(TIOCM_DTR|TIOCM_RTS);
+
+  if (ioctl(fd, TIOCMSET, &status) == -1) {
+    printf("ser_flow: TIOCMSET error\n");
+    return -1;
+  }
+  return 0;
+}
+
 /* Input 
  * Very complicated because select() won't mark fd as readable 
  * if there was more than one byte available last time and we only
diff --git a/src/lib/simple_serial.h b/src/lib/simple_serial.h
index 7140c04..38d48c0 100644
--- a/src/lib/simple_serial.h
+++ b/src/lib/simple_serial.h
@@ -26,6 +26,7 @@ void simple_serial_flush(void);
 unsigned char __fastcall__ simple_serial_putc(char c);
 #endif
 
+unsigned char ser_flow(unsigned char on);
 /* Input */
 char __fastcall__ simple_serial_getc(void);
 int __fastcall__ simple_serial_getc_with_timeout(void);
diff --git a/src/surl-server/main.c b/src/surl-server/main.c
index a1672b0..a64b01d 100644
--- a/src/surl-server/main.c
+++ b/src/surl-server/main.c
@@ -163,6 +163,8 @@ reopen:
 
   fflush(stdout);
 
+  ser_flow(1);
+
   while(1) {
 
     /* read request */
